#!/usr/bin/env bash

set -x

# ====== Variables =============================

declare -A gaps
declare -A color

gaps["top"]="10"
gaps["bottom"]="10"
gaps["left"]="10"
gaps["right"]="10"
gaps["inner"]="10"

color["focused"]="0xE0808080"
color["normal"]="0x00010101"
color["preselect"]="0xE02d74da"

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"WIDGET NAME\"'"

# ===== Loading Scripting Additions ============


sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

yabai -m config layout                      bsp

yabai -m config top_padding                 "${gaps["top"]}" 
yabai -m config bottom_padding              "${gaps["bottom"]}"
yabai -m config left_padding                "${gaps["left"]}"
yabai -m config right_padding               "${gaps["right"]}"
yabai -m config window_gap                  "${gaps["inner"]}"

yabai -m config mouse_follows_focus         off
yabai -m config focus_follows_mouse         off

yabai -m config window_topmost              off

yabai -m config window_opacity              on
yabai -m config window_shadow               on # float

yabai -m config window_border               off
yabai -m config window_border_width         1
yabai -m config active_window_border_color  "${color["focused"]}"
yabai -m config normal_window_border_color  "${color["normal"]}"
yabai -m config insert_feedback_color       "${color["preselect"]}"

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       0.95
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# ===== Rules ==================================

yabai -m rule --add title="(Co(py|nnect)|Move|Info|System)" manage=off border=off
yabai -m rule --add app="(Co(py|nnect)|Move|Info|System)" manage=off border=off
yabai -m rule --add app=Finder manage=off border=off grid=30:6:1:1:4:28
yabai -m rule --add app=ForkLift manage=off border=off grid=30:6:1:1:4:28
yabai -m rule --add app=Steam manage=off border=off
yabai -m rule --add app="Looking Glass" manage=off border=off
yabai -m rule --add app=iTerm2 opacity=1.0 manage=off border=off
yabai -m rule --add app="^Safari$" manage=off grid=30:4:1:1:2:28

# ===== Signals ================================
yabai -m signal --add event=application_activated \
                      app=ForkLift \
                      action="yabai -m rule --add app=ForkLift manage=off border=off grid=30:6:1:1:4:28"
yabai -m signal --add event=application_deactivated \
                      app=ForkLift \
                      action="osascript -e 'tell application \"System Events\" to set visible of process \"ForkLift\" to false'"
yabai -m signal --add event=application_activated \
                      app="^Safari$" \
                      action="yabai -m rule --add app=\"^Safari$\" manage=off border=off grid=30:4:1:1:2:28"
yabai -m signal --add event=application_deactivated \
                      app="^Safari^" \
                      action="osascript -e 'tell application \"System Events\" to set visible of process \"Safari\" to false'"

set +x
printf "yabai: configuration loaded...\\n"
